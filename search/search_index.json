{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Home Page Coding workspace Coding workspace is on the left of the screen and it's where you will drag and drop blocks into. Virtual Circuit The virtual circuit gives you a live preview of what your code will do. Steps Steps are the step by step instructions for what your code will do in the circuit. Each step corresponds with a block. Loop Block This block will run forever on a real Arduino but only three times through the virtual circuit. What this means is that all the blocks inside the loop block will run three times. You can change this number to whatever positive number you want. Question about a block? If you have a question about a block click on the question mark. Code Page This shows you the text base code that you are writing. Arduino Page With the Arduino page, you can upload code, send and receive messages and live debugging. Lesson Page This page displays all the lessons currently avialable.","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#home-page","text":"","title":"Home Page"},{"location":"#coding-workspace","text":"Coding workspace is on the left of the screen and it's where you will drag and drop blocks into.","title":"Coding workspace"},{"location":"#virtual-circuit","text":"The virtual circuit gives you a live preview of what your code will do.","title":"Virtual Circuit"},{"location":"#steps","text":"Steps are the step by step instructions for what your code will do in the circuit. Each step corresponds with a block.","title":"Steps"},{"location":"#loop-block","text":"This block will run forever on a real Arduino but only three times through the virtual circuit. What this means is that all the blocks inside the loop block will run three times. You can change this number to whatever positive number you want.","title":"Loop Block"},{"location":"#question-about-a-block","text":"If you have a question about a block click on the question mark.","title":"Question about a block?"},{"location":"#code-page","text":"This shows you the text base code that you are writing.","title":"Code Page"},{"location":"#arduino-page","text":"With the Arduino page, you can upload code, send and receive messages and live debugging.","title":"Arduino Page"},{"location":"#lesson-page","text":"This page displays all the lessons currently avialable.","title":"Lesson Page"},{"location":"addons/","text":"Addons Breadboard Led Resistor RGB LED RGB Light Strip Push Buttons Servos","title":"Addons"},{"location":"addons/#addons","text":"","title":"Addons"},{"location":"addons/#breadboard","text":"","title":"Breadboard"},{"location":"addons/#led","text":"","title":"Led"},{"location":"addons/#resistor","text":"","title":"Resistor"},{"location":"addons/#rgb-led","text":"","title":"RGB LED"},{"location":"addons/#rgb-light-strip","text":"","title":"RGB Light Strip"},{"location":"addons/#push-buttons","text":"","title":"Push Buttons"},{"location":"addons/#servos","text":"","title":"Servos"},{"location":"blocks/","text":"Blocks Arduino Message Setup This block will give the Arduino the ability to send and receive messages. The stuff under the ----------- is for the virtual circuit. It tells the virtual circuit that a message is being received and what that message is in the loop number that the Arduino is currently executing. Arduino Get Message This block gets the message being sent from the computer to the Arduino. Button Setup This block will tell the Arduino which pin to connect the button to. The stuff under the ----------- is for the virtual circuit. It's used to tell the virtual circuit whether the button is pressed or not in the loop that the circuit is running. Color Exact The block returns a custom color based on the red, green, and blue numbers you put into the block. Color Picker Returns a custom color based on the color picked in the color picker. Compare The block will compare the blocks on the right and left. It will use the option in the middle to make the evaluation. This block will equal true or false. If the option is set to \"=\" it will return true if what is on the right and left side is true. It it's set to \"\u2260\" then what is true if what is on the right and left side are not equal. FASTLed Setup This block will setup the fast led library. Here the options: Analog Pin -> Sets the data pin that your led light strip is wire to. The data controls the colors of your LEDs. Type -> is the chip name that is used to control your LEDS. Most of them use WS2811. Color Order -> On most neopixels this will be RGB and on cheaper light strips it will be GRB. Number of Leds -> Controls the number of leds in strip. Electroblocks can only simulate 60 leds at this time. Brightness: Controls how bright the leds are. If you are photographing them I have found 10 to be a good brightness. FASTLed Set Color Change the color for an LED. The position will start at one in ElectroBlocks. Get Variable A variable is one way you can tell the computer to store something. The get variable block will get the value stored inside the variable. If The block is used to make decisions. If what is connected to the block is true, then what is inside the do block will run. Is Button Pressed This block will return if the button is pressed. Loop Blocks inside the block will run forever on the actual Arduino. It will be from top to bottom, and once it reaches the bottom block, it will go back to the top block. The simulator on the right of the screen will run three times. Loop With This block is used to repeat something over and over again. It creates a variable often called \"i\". It will start \"i\" from the number and add or subtract the value stored in \"i\" until it gets to the to number. The best way to understand loops in Electroblocks is to play around with them. Led The LED block controls whether an led is on or off. The first dropdown decides which Arduino Pin the led is connected to. The second dropdown turns the LED on or off. RGB Set Color Sets the color of the RGB LED. RGB LED Setup Sets the wires used in the RGB LED. Servo The block controls the data pin that the servo is connected to and the number of degrees that you want to rotate the servo. The higher the number, the more the servo will rotate. Wait The wait block will pause the Arduino.","title":"Blocks"},{"location":"blocks/#blocks","text":"","title":"Blocks"},{"location":"blocks/#arduino-message-setup","text":"This block will give the Arduino the ability to send and receive messages. The stuff under the ----------- is for the virtual circuit. It tells the virtual circuit that a message is being received and what that message is in the loop number that the Arduino is currently executing.","title":"Arduino Message Setup"},{"location":"blocks/#arduino-get-message","text":"This block gets the message being sent from the computer to the Arduino.","title":"Arduino Get Message"},{"location":"blocks/#button-setup","text":"This block will tell the Arduino which pin to connect the button to. The stuff under the ----------- is for the virtual circuit. It's used to tell the virtual circuit whether the button is pressed or not in the loop that the circuit is running.","title":"Button Setup"},{"location":"blocks/#color-exact","text":"The block returns a custom color based on the red, green, and blue numbers you put into the block.","title":"Color Exact"},{"location":"blocks/#color-picker","text":"Returns a custom color based on the color picked in the color picker.","title":"Color Picker"},{"location":"blocks/#compare","text":"The block will compare the blocks on the right and left. It will use the option in the middle to make the evaluation. This block will equal true or false. If the option is set to \"=\" it will return true if what is on the right and left side is true. It it's set to \"\u2260\" then what is true if what is on the right and left side are not equal.","title":"Compare"},{"location":"blocks/#fastled-setup","text":"This block will setup the fast led library. Here the options: Analog Pin -> Sets the data pin that your led light strip is wire to. The data controls the colors of your LEDs. Type -> is the chip name that is used to control your LEDS. Most of them use WS2811. Color Order -> On most neopixels this will be RGB and on cheaper light strips it will be GRB. Number of Leds -> Controls the number of leds in strip. Electroblocks can only simulate 60 leds at this time. Brightness: Controls how bright the leds are. If you are photographing them I have found 10 to be a good brightness.","title":"FASTLed Setup"},{"location":"blocks/#fastled-set-color","text":"Change the color for an LED. The position will start at one in ElectroBlocks.","title":"FASTLed Set Color"},{"location":"blocks/#get-variable","text":"A variable is one way you can tell the computer to store something. The get variable block will get the value stored inside the variable.","title":"Get Variable"},{"location":"blocks/#if","text":"The block is used to make decisions. If what is connected to the block is true, then what is inside the do block will run.","title":"If"},{"location":"blocks/#is-button-pressed","text":"This block will return if the button is pressed.","title":"Is Button Pressed"},{"location":"blocks/#loop","text":"Blocks inside the block will run forever on the actual Arduino. It will be from top to bottom, and once it reaches the bottom block, it will go back to the top block. The simulator on the right of the screen will run three times.","title":"Loop"},{"location":"blocks/#loop-with","text":"This block is used to repeat something over and over again. It creates a variable often called \"i\". It will start \"i\" from the number and add or subtract the value stored in \"i\" until it gets to the to number. The best way to understand loops in Electroblocks is to play around with them.","title":"Loop With"},{"location":"blocks/#led","text":"The LED block controls whether an led is on or off. The first dropdown decides which Arduino Pin the led is connected to. The second dropdown turns the LED on or off.","title":"Led"},{"location":"blocks/#rgb-set-color","text":"Sets the color of the RGB LED.","title":"RGB Set Color"},{"location":"blocks/#rgb-led-setup","text":"Sets the wires used in the RGB LED.","title":"RGB LED Setup"},{"location":"blocks/#servo","text":"The block controls the data pin that the servo is connected to and the number of degrees that you want to rotate the servo. The higher the number, the more the servo will rotate.","title":"Servo"},{"location":"blocks/#wait","text":"The wait block will pause the Arduino.","title":"Wait"},{"location":"howto/openproject/","text":"How to open a project in ElectroBlocks. Steps 1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Open Project"},{"location":"howto/openproject/#how-to-open-a-project-in-electroblocks","text":"","title":"How to open a project in ElectroBlocks."},{"location":"howto/openproject/#steps","text":"1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Steps"},{"location":"howto/saveproject/","text":"How to save a project in ElectroBlocks Steps 1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Save Project"},{"location":"howto/saveproject/#how-to-save-a-project-in-electroblocks","text":"","title":"How to save a project in ElectroBlocks"},{"location":"howto/saveproject/#steps","text":"1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Steps"},{"location":"lessons/blink/","text":"Blink What you will learn How to write and basic program to control leds and how to uplaod that code to the Arduino. Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x Leds 2 x Resistors (100 - 400 ohms) 5 x wires Blocks Loop Led Wait Coding Video Wiring Diagram Steps First LED 1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from - of the breadboard to a GND pin on the Arduino. 3. Connect a wire from (28, A) to the - of the breadboard. 4. Insert the led's short (-) wire into (28, E) and the led's long (+) wire into (29,E). 5. Connect a resistor from (29, D) to (31, D). 6. Connect a wire from (31, A) to pin 7 on the Arduino. 7. Connect the Arduino into the computer. Steps Second LED 1. Connect a wire from (40, A) to the - of the breadboard. 2. Insert the led's short (-) wire into (40, E) and the led's long (+) wire into (41,E). 3. Connect a resistor from wiring (41, D) to (43, D). 4. Connect a wire from (43, A) to pin 4 on the Arduino. Review What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Blink"},{"location":"lessons/blink/#blink","text":"","title":"Blink"},{"location":"lessons/blink/#what-you-will-learn","text":"How to write and basic program to control leds and how to uplaod that code to the Arduino.","title":"What you will learn"},{"location":"lessons/blink/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x Leds 2 x Resistors (100 - 400 ohms) 5 x wires","title":"Bill of Materials"},{"location":"lessons/blink/#blocks","text":"Loop Led Wait","title":"Blocks"},{"location":"lessons/blink/#coding-video","text":"","title":"Coding Video"},{"location":"lessons/blink/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/blink/#steps-first-led","text":"1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from - of the breadboard to a GND pin on the Arduino. 3. Connect a wire from (28, A) to the - of the breadboard. 4. Insert the led's short (-) wire into (28, E) and the led's long (+) wire into (29,E). 5. Connect a resistor from (29, D) to (31, D). 6. Connect a wire from (31, A) to pin 7 on the Arduino. 7. Connect the Arduino into the computer.","title":"Steps First LED"},{"location":"lessons/blink/#steps-second-led","text":"1. Connect a wire from (40, A) to the - of the breadboard. 2. Insert the led's short (-) wire into (40, E) and the led's long (+) wire into (41,E). 3. Connect a resistor from wiring (41, D) to (43, D). 4. Connect a wire from (43, A) to pin 4 on the Arduino.","title":"Steps Second LED"},{"location":"lessons/blink/#review","text":"What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Review"},{"location":"lessons/fastled/","text":"Fast LEDs This lesson page will serve for as the reference for all lessons related the FAST Leds. It contains how to wire them and what to do. What you will learn How to do cool led light patterns Advanced loops How to create random colors How to wire up and rgb led light strip Bill of Materials 1 x Arduino with cable 1 x RGB LED Light Strip 3 x wires Blocks FastLED Setup FastLED Change Color Loop with Get Variable Wait Color Picker Wiring Diagram Coding Videos Steps 1. Look at RGB LED light strip. Notice the arrows. The direction that the arrows point is how the LEDS are numbered. This is how it looks like if each LED were a number: 1 -> 2 -> 3 -> 4 Also notice the labels Din, GND, 5v+. Din -> Mean data in. This wire controls the data in the rgb led. It will go to an analog pin. GND -> Ground 5v+ -> 5 volts 2. Connect a wire from GND of the LED Light Strip to GND of the Arduino. Consult you LED Light Strip for GND. 3. Connect a wire from 5v+ of the LED Light Strip to Vin of the Arduino. Consult you LED Light Strip for 5v+. Vin will supply the max power and will give better performance from my experience. 4. Connect a wire from Din of the LED Light Strip to A0 of the Arduino.","title":"FastLED"},{"location":"lessons/fastled/#fast-leds","text":"This lesson page will serve for as the reference for all lessons related the FAST Leds. It contains how to wire them and what to do.","title":"Fast LEDs"},{"location":"lessons/fastled/#what-you-will-learn","text":"How to do cool led light patterns Advanced loops How to create random colors How to wire up and rgb led light strip","title":"What you will learn"},{"location":"lessons/fastled/#bill-of-materials","text":"1 x Arduino with cable 1 x RGB LED Light Strip 3 x wires","title":"Bill of Materials"},{"location":"lessons/fastled/#blocks","text":"FastLED Setup FastLED Change Color Loop with Get Variable Wait Color Picker","title":"Blocks"},{"location":"lessons/fastled/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/fastled/#coding-videos","text":"","title":"Coding Videos"},{"location":"lessons/fastled/#steps","text":"1. Look at RGB LED light strip. Notice the arrows. The direction that the arrows point is how the LEDS are numbered. This is how it looks like if each LED were a number: 1 -> 2 -> 3 -> 4 Also notice the labels Din, GND, 5v+. Din -> Mean data in. This wire controls the data in the rgb led. It will go to an analog pin. GND -> Ground 5v+ -> 5 volts 2. Connect a wire from GND of the LED Light Strip to GND of the Arduino. Consult you LED Light Strip for GND. 3. Connect a wire from 5v+ of the LED Light Strip to Vin of the Arduino. Consult you LED Light Strip for 5v+. Vin will supply the max power and will give better performance from my experience. 4. Connect a wire from Din of the LED Light Strip to A0 of the Arduino.","title":"Steps"},{"location":"lessons/highfive/","text":"Blink What you will learn How to build a highfive machine How to make an Arduino respond when something happens If Blocks Electrical components like servos and push buttons Bill of Materials 1 x Arduino with cable 1 x Breadboard 1 x Push Button 1 x Servo 1 x posterboard 1 x scissor 7 x wires Blocks Servo Wait If Button Setup Is Button Pressed Wiring Diagram Coding Video Building Highfive Machine 1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from (27, A) to the - of the breadboard. 3. Connect one of the buttons to hole (27, E) and the other wire to (30, E). 4. Connect a wire from (30, A) to pin 7 on the Arduino. 5. Connect a wire from (39, E) to the ground wire on the servo. On these servos, the ground wire is brown. 6. Connect a wire from (40, E) to the power wire on the servo. On these servos, the power wire is red. 7. Connect a wire from (42, E) to the data on the servo. On these servos, the data wire is orange. 8. Connect a wire from (39, A) to the - of the breadboard. 9. Connect a wire from (40, A) to the + of the breadboard. 10. Connect a wire from (42, A) to pin 3 on the Arduino. 11. Connect a wire from - of the breadboard to a GND pin on the Arduino. 12. Connect a wire from + of the breadboard to a 5v pin on the Arduino. 13. Trace and cut out your hand from a piece of posterboard. 14. Tape a popsicle stick the back of your posterboard hand. 15. Tape the plastic wing to the popsicle stick. 16. Tape the servo to the table. 17. Connect the servos wings to the servo. Review What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"HighFive Machine"},{"location":"lessons/highfive/#blink","text":"","title":"Blink"},{"location":"lessons/highfive/#what-you-will-learn","text":"How to build a highfive machine How to make an Arduino respond when something happens If Blocks Electrical components like servos and push buttons","title":"What you will learn"},{"location":"lessons/highfive/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 1 x Push Button 1 x Servo 1 x posterboard 1 x scissor 7 x wires","title":"Bill of Materials"},{"location":"lessons/highfive/#blocks","text":"Servo Wait If Button Setup Is Button Pressed","title":"Blocks"},{"location":"lessons/highfive/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/highfive/#coding-video","text":"","title":"Coding Video"},{"location":"lessons/highfive/#building-highfive-machine","text":"1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from (27, A) to the - of the breadboard. 3. Connect one of the buttons to hole (27, E) and the other wire to (30, E). 4. Connect a wire from (30, A) to pin 7 on the Arduino. 5. Connect a wire from (39, E) to the ground wire on the servo. On these servos, the ground wire is brown. 6. Connect a wire from (40, E) to the power wire on the servo. On these servos, the power wire is red. 7. Connect a wire from (42, E) to the data on the servo. On these servos, the data wire is orange. 8. Connect a wire from (39, A) to the - of the breadboard. 9. Connect a wire from (40, A) to the + of the breadboard. 10. Connect a wire from (42, A) to pin 3 on the Arduino. 11. Connect a wire from - of the breadboard to a GND pin on the Arduino. 12. Connect a wire from + of the breadboard to a 5v pin on the Arduino. 13. Trace and cut out your hand from a piece of posterboard. 14. Tape a popsicle stick the back of your posterboard hand. 15. Tape the plastic wing to the popsicle stick. 16. Tape the servo to the table. 17. Connect the servos wings to the servo.","title":"Building Highfive Machine"},{"location":"lessons/highfive/#review","text":"What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Review"},{"location":"lessons/rgbled/","text":"RGB LED What you will learn What RGB stands for How to change the color of an RGB LED How to fade a from one color to another with an RGB LED What is RGB RGB stands for red, green, and blue. It allows you mix those colors to create custom colors. Bill of Materials 1 x Arduino with cable 1 x Breadboard 1 x RGB LED 1 x Resistors (1000 ohms) 9 x wires Blocks RGB LED Setup RGB LED Set Color Color Picker Color Exact Block Loop with Get Variable Coding Video Wiring Diagram Steps 1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect the RGB LED into the breadboard. RED Wire in (27, H) GND Wire in (28, H) -- (Longest wire) GREEN Wire in (29, H) BLUE Wire in (30, H) 3. Connect a wire from (27, F) to (27, E). 4. Connect a wire from (28, F) to (28, E). 5. Connect a wire from (29, F) to (29, E). 6. Connect a wire from (30, F) to (30, E). 7. Connect a resistor from (27, D) to (27, B). 8. Connect a resistor from (28, D) to (28, B). 9. Connect a resistor from (30, D) to (30, B). 10. Connect a wire from (27, A) to pin 11 on the Arduino. 11. Connect a wire from (29, A) to pin 10 on the Arduino. 12. Connect a wire from (30, A) to pin 9 on the Arduino. 13. Connect a wire from (28, A) to GND (-) of the breadboard. 14. Connect a wire from - of the breadboard to a GND pin on the Arduino. Challenge See if you can send a message to the Arduino and display a color. An example would be sending \"red\" and showing red in the RGB LED. See if you create another fade. An example would be purple to blue.","title":"RGB LED"},{"location":"lessons/rgbled/#rgb-led","text":"","title":"RGB LED"},{"location":"lessons/rgbled/#what-you-will-learn","text":"What RGB stands for How to change the color of an RGB LED How to fade a from one color to another with an RGB LED","title":"What you will learn"},{"location":"lessons/rgbled/#what-is-rgb","text":"RGB stands for red, green, and blue. It allows you mix those colors to create custom colors.","title":"What is RGB"},{"location":"lessons/rgbled/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 1 x RGB LED 1 x Resistors (1000 ohms) 9 x wires","title":"Bill of Materials"},{"location":"lessons/rgbled/#blocks","text":"RGB LED Setup RGB LED Set Color Color Picker Color Exact Block Loop with Get Variable","title":"Blocks"},{"location":"lessons/rgbled/#coding-video","text":"","title":"Coding Video"},{"location":"lessons/rgbled/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/rgbled/#steps","text":"1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect the RGB LED into the breadboard. RED Wire in (27, H) GND Wire in (28, H) -- (Longest wire) GREEN Wire in (29, H) BLUE Wire in (30, H) 3. Connect a wire from (27, F) to (27, E). 4. Connect a wire from (28, F) to (28, E). 5. Connect a wire from (29, F) to (29, E). 6. Connect a wire from (30, F) to (30, E). 7. Connect a resistor from (27, D) to (27, B). 8. Connect a resistor from (28, D) to (28, B). 9. Connect a resistor from (30, D) to (30, B). 10. Connect a wire from (27, A) to pin 11 on the Arduino. 11. Connect a wire from (29, A) to pin 10 on the Arduino. 12. Connect a wire from (30, A) to pin 9 on the Arduino. 13. Connect a wire from (28, A) to GND (-) of the breadboard. 14. Connect a wire from - of the breadboard to a GND pin on the Arduino.","title":"Steps"},{"location":"lessons/rgbled/#challenge","text":"See if you can send a message to the Arduino and display a color. An example would be sending \"red\" and showing red in the RGB LED. See if you create another fade. An example would be purple to blue.","title":"Challenge"},{"location":"lessons/sending-messages/","text":"Sending Messages What you will learn How to send messages to an Arduino How to write code to respond to thoses messages to control an LED Bill of Materials 1 x Arduino with cable 1 x Breadboard 1 x Leds 1 x Resistors (100 - 400 ohms) 4 x wires Blocks Arduino Message Setup Arduino Get Message Compare Block If Led Coding Video Wiring Diagram Steps The steps for sending message are the same steps for wiring the first led in blink lesson . Challenge See if you can wire up another LED and come up with a message that can make it go on and off.","title":"Sending Messages"},{"location":"lessons/sending-messages/#sending-messages","text":"","title":"Sending Messages"},{"location":"lessons/sending-messages/#what-you-will-learn","text":"How to send messages to an Arduino How to write code to respond to thoses messages to control an LED","title":"What you will learn"},{"location":"lessons/sending-messages/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 1 x Leds 1 x Resistors (100 - 400 ohms) 4 x wires","title":"Bill of Materials"},{"location":"lessons/sending-messages/#blocks","text":"Arduino Message Setup Arduino Get Message Compare Block If Led","title":"Blocks"},{"location":"lessons/sending-messages/#coding-video","text":"","title":"Coding Video"},{"location":"lessons/sending-messages/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/sending-messages/#steps","text":"The steps for sending message are the same steps for wiring the first led in blink lesson .","title":"Steps"},{"location":"lessons/sending-messages/#challenge","text":"See if you can wire up another LED and come up with a message that can make it go on and off.","title":"Challenge"},{"location":"lessons/wave/","text":"Wave What you will learn How to build a wave machine How to use a count with block to make something repeat Bill of Materials 1 x Arduino with cable 1 x Breadboard 1 x Push Button 1 x Servo 1 x posterboard 1 x scissor 7 x wires Blocks Loop with Get Variable Servo Wait If Button Setup Is Button Pressed Wiring Diagram Coding Video Steps The steps for wave machine are the same steps for building high five machine","title":"Wave Machine"},{"location":"lessons/wave/#wave","text":"","title":"Wave"},{"location":"lessons/wave/#what-you-will-learn","text":"How to build a wave machine How to use a count with block to make something repeat","title":"What you will learn"},{"location":"lessons/wave/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 1 x Push Button 1 x Servo 1 x posterboard 1 x scissor 7 x wires","title":"Bill of Materials"},{"location":"lessons/wave/#blocks","text":"Loop with Get Variable Servo Wait If Button Setup Is Button Pressed","title":"Blocks"},{"location":"lessons/wave/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/wave/#coding-video","text":"","title":"Coding Video"},{"location":"lessons/wave/#steps","text":"The steps for wave machine are the same steps for building high five machine","title":"Steps"},{"location":"lessons/what-is-an-arduino/","text":"What is an Arduino? Objective To learn what an Arduino is and some of the parts of an Arduino? Kit Bill of Materials 1 x Arduino with cable Video What is an Arduino? An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno. What are pins? Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens. Where is the Arduino's brain? What are the RX and TX leds and pins? These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up. Reset Button (reloads the program) This will restart the Arduino with the code that is already on it. Internal Led This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino","text":"","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#objective","text":"To learn what an Arduino is and some of the parts of an Arduino?","title":"Objective"},{"location":"lessons/what-is-an-arduino/#kit","text":"","title":"Kit"},{"location":"lessons/what-is-an-arduino/#bill-of-materials","text":"1 x Arduino with cable","title":"Bill of Materials"},{"location":"lessons/what-is-an-arduino/#video","text":"","title":"Video"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino_1","text":"An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-are-pins","text":"Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens.","title":"What are pins?"},{"location":"lessons/what-is-an-arduino/#where-is-the-arduinos-brain","text":"","title":"Where is the Arduino's brain?"},{"location":"lessons/what-is-an-arduino/#what-are-the-rx-and-tx-leds-and-pins","text":"These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up.","title":"What are the RX and TX leds and pins?"},{"location":"lessons/what-is-an-arduino/#reset-button-reloads-the-program","text":"This will restart the Arduino with the code that is already on it.","title":"Reset Button (reloads the program)"},{"location":"lessons/what-is-an-arduino/#internal-led","text":"This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"Internal Led"}]}