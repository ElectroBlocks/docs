{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ElectroBlocks Tutorials This website contains all the tutorials for ElectroBlocks. You can follow along by going to electroblocks .","title":"Home"},{"location":"#electroblocks-tutorials","text":"This website contains all the tutorials for ElectroBlocks. You can follow along by going to electroblocks .","title":"ElectroBlocks Tutorials"},{"location":"blink/","text":"Blink Objective How to write and basic program to control leds and how to uplaod that code to the Arduino. Kit Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 200 ohms) 2 x led wires Project Components Led The led stands for light emitting diode. The important thing to note are the wires connected to it. The long wire is positive and the short wire is negative. When you pass electricity through it, it will emit light. Resistor The resistor is used to decrease the amount of electrons flowing through the wire. The strength of the resistor is marked by the colored bands. You can use the calculator to learn more. Bre adboard The breadboard is used to create / prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that are plugged into it. See the picture below. The green lines represent how which pins share electricity. In the middle of the board pins connectted up and down share electricity. On the side of the board pins are connected side to side. Code There are two main blocks of code you need to know about when programming the Arduino. The setup block and the loop block. The loop block will run over and over again. The setup block will only run once. The way it works the blocks at the top of the loop or setup block will execute first. The example above the send message block would run first then the wait block. Loop Block Notice the loop block has (runs x times) in it. That is how many times it will run on the virtual circuit. In the actual Arduino it runs forever. Steps Wiring the first led I don't follow the circuit picture exactly. You can if you want. Just remember the principles of the breadboard. 1. Connect the long end of the led into hole (25, E) and the short into (28, E). 2. Connect a jumper wire from (28, A) to the ground - line of the breadboard. 3. Connect a resistor from (25, D) to (25, B). 4. Connect a jumper wire from ground of the breadboard to ground (gnd) of the Arduino. 5. Connect a jumper wire from (25, a) to pin 7 on the Arduino. Setting up chrome 1. Go to chrome://flags in your chrome browser 2. In the search bar type in 'Experimental Web Platform features' 3. Enable the feature and click the relaunch button at the bottom of your screen. Uploading the code 1. Go to electroblocks.org 2. Drag and led block into the loop block. Set it use pin 7. 3. Upload the code the Arduino. Coding Blink Note code is execute from top to bottom meaning that the blocks at the top of the loop will run before the bottom ones run. Wiring the second led 1. Connect the long end of the led into hole (17, E) and the short into (20, E). 2. Connect a jumper wire from (20, A) to the ground - line of the breadboard. 3. Connect a resistor from (17, D) to (17, B). 4. Connect a jumper wire from (20, a) to pin 5 on the Arduino. Challenge make both leds blink at the same time. Challenge make leds in an alternate pattern Review What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Blink"},{"location":"blink/#blink","text":"","title":"Blink"},{"location":"blink/#objective","text":"How to write and basic program to control leds and how to uplaod that code to the Arduino.","title":"Objective"},{"location":"blink/#kit","text":"","title":"Kit"},{"location":"blink/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 200 ohms) 2 x led wires","title":"Bill of Materials"},{"location":"blink/#project","text":"","title":"Project"},{"location":"blink/#components","text":"","title":"Components"},{"location":"blink/#led","text":"The led stands for light emitting diode. The important thing to note are the wires connected to it. The long wire is positive and the short wire is negative. When you pass electricity through it, it will emit light.","title":"Led"},{"location":"blink/#resistor","text":"The resistor is used to decrease the amount of electrons flowing through the wire. The strength of the resistor is marked by the colored bands. You can use the calculator to learn more.","title":"Resistor"},{"location":"blink/#bre-adboard","text":"The breadboard is used to create / prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that are plugged into it. See the picture below. The green lines represent how which pins share electricity. In the middle of the board pins connectted up and down share electricity. On the side of the board pins are connected side to side.","title":"Bre adboard"},{"location":"blink/#code","text":"There are two main blocks of code you need to know about when programming the Arduino. The setup block and the loop block. The loop block will run over and over again. The setup block will only run once. The way it works the blocks at the top of the loop or setup block will execute first. The example above the send message block would run first then the wait block.","title":"Code"},{"location":"blink/#loop-block","text":"Notice the loop block has (runs x times) in it. That is how many times it will run on the virtual circuit. In the actual Arduino it runs forever.","title":"Loop Block"},{"location":"blink/#steps","text":"","title":"Steps"},{"location":"blink/#wiring-the-first-led","text":"I don't follow the circuit picture exactly. You can if you want. Just remember the principles of the breadboard. 1. Connect the long end of the led into hole (25, E) and the short into (28, E). 2. Connect a jumper wire from (28, A) to the ground - line of the breadboard. 3. Connect a resistor from (25, D) to (25, B). 4. Connect a jumper wire from ground of the breadboard to ground (gnd) of the Arduino. 5. Connect a jumper wire from (25, a) to pin 7 on the Arduino.","title":"Wiring the first led"},{"location":"blink/#setting-up-chrome","text":"1. Go to chrome://flags in your chrome browser 2. In the search bar type in 'Experimental Web Platform features' 3. Enable the feature and click the relaunch button at the bottom of your screen.","title":"Setting up chrome"},{"location":"blink/#uploading-the-code","text":"1. Go to electroblocks.org 2. Drag and led block into the loop block. Set it use pin 7. 3. Upload the code the Arduino.","title":"Uploading the code"},{"location":"blink/#coding-blink","text":"Note code is execute from top to bottom meaning that the blocks at the top of the loop will run before the bottom ones run.","title":"Coding Blink"},{"location":"blink/#wiring-the-second-led","text":"1. Connect the long end of the led into hole (17, E) and the short into (20, E). 2. Connect a jumper wire from (20, A) to the ground - line of the breadboard. 3. Connect a resistor from (17, D) to (17, B). 4. Connect a jumper wire from (20, a) to pin 5 on the Arduino.","title":"Wiring the second led"},{"location":"blink/#challenge-make-both-leds-blink-at-the-same-time","text":"","title":"Challenge make both leds blink at the same time."},{"location":"blink/#challenge-make-leds-in-an-alternate-pattern","text":"","title":"Challenge make leds in an alternate pattern"},{"location":"blink/#review","text":"What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Review"},{"location":"messages/","text":"Messages Objective To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson . Kit Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 300 ohms) 2 x led wires Message Setup Block This is a library block that is require for the Arduino to send and recieve messages. Notice the stuff below the \"---------------\". This where you will tell the virtual Arduino what messages it suppose to recieve. The loop drop down is used to tell it what to receive during which loop cycle. This allows us to test a lot of situations without having an Arduino present. If Block If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run. Comparison Block The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value. Coding it up","title":"Messages"},{"location":"messages/#messages","text":"","title":"Messages"},{"location":"messages/#objective","text":"To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson .","title":"Objective"},{"location":"messages/#kit","text":"","title":"Kit"},{"location":"messages/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 300 ohms) 2 x led wires","title":"Bill of Materials"},{"location":"messages/#message-setup-block","text":"This is a library block that is require for the Arduino to send and recieve messages. Notice the stuff below the \"---------------\". This where you will tell the virtual Arduino what messages it suppose to recieve. The loop drop down is used to tell it what to receive during which loop cycle. This allows us to test a lot of situations without having an Arduino present.","title":"Message Setup Block"},{"location":"messages/#if-block","text":"If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run.","title":"If Block"},{"location":"messages/#comparison-block","text":"The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value.","title":"Comparison Block"},{"location":"messages/#coding-it-up","text":"","title":"Coding it up"},{"location":"rgbled/","text":"RGB LED Objective To learn how to control an RGB LED with an Arduino and a computer. Kit Bill of Materials Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3 What is RGB RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example. What is RGB LED An rgb led is an led that has 4 wires. One for red, green, and blue, and the other for ground. You send an electrical signal to each color wire to control the amount of each you want. The largest wire is ground. Get Part of the text block This block will take text block and will return a part of it. In the example above the block would return blue. If you wanted it to return red you would change the position to 2. Text to number block This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino recieves a message it's text. Steps 1. Insert the rgb led into the breadboard. The red wire goes into (42, E). The ground wire goes into (39, E). The green wire goes into (37, E). The blue wire goes into (35, E). 2. Connect a jumper wire into - of the breadboard to gnd pin of the Arduino. 3. Connect a resistor into (42, D) and (42, B) of the breadboard. 4. Connect a jumper wire into (42, A) and the other end into pin 6 of the Arduino. 5. Connect a jumper wire into (39, A) and the other end into - of the breadboard. 6. Connect a resistor into (37, D) and (37, B) of the breadboard. 7. Connect a jumper wire into (37, A) and the other end into pin 5 of the Arduino. 8. Connect a resistor into (35, D) and (35, B) of the breadboard. 9. Connect a jumper wire into (35, A) and the other end into pin 3 of the Arduino. Testing Wire Coding","title":"RGB LED"},{"location":"rgbled/#rgb-led","text":"","title":"RGB LED"},{"location":"rgbled/#objective","text":"To learn how to control an RGB LED with an Arduino and a computer.","title":"Objective"},{"location":"rgbled/#kit","text":"","title":"Kit"},{"location":"rgbled/#bill-of-materials","text":"Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3","title":"Bill of Materials"},{"location":"rgbled/#what-is-rgb","text":"RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example.","title":"What is RGB"},{"location":"rgbled/#what-is-rgb-led","text":"An rgb led is an led that has 4 wires. One for red, green, and blue, and the other for ground. You send an electrical signal to each color wire to control the amount of each you want. The largest wire is ground.","title":"What is RGB LED"},{"location":"rgbled/#get-part-of-the-text-block","text":"This block will take text block and will return a part of it. In the example above the block would return blue. If you wanted it to return red you would change the position to 2.","title":"Get Part of the text block"},{"location":"rgbled/#text-to-number-block","text":"This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino recieves a message it's text.","title":"Text to number block"},{"location":"rgbled/#steps","text":"1. Insert the rgb led into the breadboard. The red wire goes into (42, E). The ground wire goes into (39, E). The green wire goes into (37, E). The blue wire goes into (35, E). 2. Connect a jumper wire into - of the breadboard to gnd pin of the Arduino. 3. Connect a resistor into (42, D) and (42, B) of the breadboard. 4. Connect a jumper wire into (42, A) and the other end into pin 6 of the Arduino. 5. Connect a jumper wire into (39, A) and the other end into - of the breadboard. 6. Connect a resistor into (37, D) and (37, B) of the breadboard. 7. Connect a jumper wire into (37, A) and the other end into pin 5 of the Arduino. 8. Connect a resistor into (35, D) and (35, B) of the breadboard. 9. Connect a jumper wire into (35, A) and the other end into pin 3 of the Arduino.","title":"Steps"},{"location":"rgbled/#testing-wire","text":"","title":"Testing Wire"},{"location":"rgbled/#coding","text":"","title":"Coding"},{"location":"servos/","text":"Servos Objective To learn how to use a servo and buttons by building fun projects. Bill of Materials Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape What is a servo A servo is a motor that allows you to control the exact rotation. You do this by telling the Arduino how many degrees to rotate it. What is a push button or switch A button or switch is a component that allows you to control whether electricity flows through it. It allows you to turn on and off the electricity. Servo Block The servo block is used to control a servo. The pin number controls which pin is connectted to the Arduino. The degrees controls what position of the servo. Button Setup Block This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit. Create Block This is used to create your own blocks. You can put blocks inside the create block and they will run when you use the block you created. Loop Block A loop block will run the blocks inside it a certain number of times. What is a variable? A variable is how the computer stores information that can change. The information that it stores is called it's value. The way you get value that a variable stores is by using the get variable block and it's name. A variable also as a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color Wiring Steps 1. Connect one end of the jumper wire into GND of the Arduino and the other end into - of the breadboard. 2. Connect one end of the jumper wire into 5v of the Arduino and the other end into + of the breadboard. 3. Connect one end of the jumper wire into (25, A) and the other end into - of the breadboard. 4. Connect one of the wires connected to the button into (25, E). 5. Connect the other of the wire connected to the button into (27, E). 6. Connect one end of the jumper wire into (27, A) and the other end into pin 7 of the Arduino. 7. Connect one end of the jumper wire into (46, E) and the other end into data wire (orange) of the servo. 8. Connect one end of the jumper wire into (46, A) and the other end into pin 3 of the Arduino. 9. Connect one end of the jumper wire into + of the breadboard and the other end into power wire (red) of the servo. 10. Connect one end of the jumper wire into - of the breadboard and the other end into ground wire (brown) of the servo. 11. Draw you hand on a piece of posterboard. 12. Cut it out. 13. Tape it to the popsicle stick. 14. Tape the popsicle stick to the plastic piece. Try to create a 90 degree angle like the picture. 15. Tape both sides. 16. Tape down the servo. 17. Make sure the servo can rotate the hand up and down. Coding High Five Machine Steps For Wave 1. Undo the tape and make plastic piece lay flat with the popsicle stick. 2. Tape it up Coding The Wave How to create a wave block Challenge Using the wave block you created. Write code that will make a wave when the button is pressed. Review What is a variable? What is a servo? What is a push button? How do you create a custom block? What kinds of projects would you like to build with this?","title":"Servos"},{"location":"servos/#servos","text":"","title":"Servos"},{"location":"servos/#objective","text":"To learn how to use a servo and buttons by building fun projects.","title":"Objective"},{"location":"servos/#bill-of-materials","text":"Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape","title":"Bill of Materials"},{"location":"servos/#what-is-a-servo","text":"A servo is a motor that allows you to control the exact rotation. You do this by telling the Arduino how many degrees to rotate it.","title":"What is a servo"},{"location":"servos/#what-is-a-push-button-or-switch","text":"A button or switch is a component that allows you to control whether electricity flows through it. It allows you to turn on and off the electricity.","title":"What is a push button or switch"},{"location":"servos/#servo-block","text":"The servo block is used to control a servo. The pin number controls which pin is connectted to the Arduino. The degrees controls what position of the servo.","title":"Servo Block"},{"location":"servos/#button-setup-block","text":"This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit.","title":"Button Setup Block"},{"location":"servos/#create-block","text":"This is used to create your own blocks. You can put blocks inside the create block and they will run when you use the block you created.","title":"Create Block"},{"location":"servos/#loop-block","text":"A loop block will run the blocks inside it a certain number of times.","title":"Loop Block"},{"location":"servos/#what-is-a-variable","text":"A variable is how the computer stores information that can change. The information that it stores is called it's value. The way you get value that a variable stores is by using the get variable block and it's name. A variable also as a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color","title":"What is a variable?"},{"location":"servos/#wiring-steps","text":"1. Connect one end of the jumper wire into GND of the Arduino and the other end into - of the breadboard. 2. Connect one end of the jumper wire into 5v of the Arduino and the other end into + of the breadboard. 3. Connect one end of the jumper wire into (25, A) and the other end into - of the breadboard. 4. Connect one of the wires connected to the button into (25, E). 5. Connect the other of the wire connected to the button into (27, E). 6. Connect one end of the jumper wire into (27, A) and the other end into pin 7 of the Arduino. 7. Connect one end of the jumper wire into (46, E) and the other end into data wire (orange) of the servo. 8. Connect one end of the jumper wire into (46, A) and the other end into pin 3 of the Arduino. 9. Connect one end of the jumper wire into + of the breadboard and the other end into power wire (red) of the servo. 10. Connect one end of the jumper wire into - of the breadboard and the other end into ground wire (brown) of the servo. 11. Draw you hand on a piece of posterboard. 12. Cut it out. 13. Tape it to the popsicle stick. 14. Tape the popsicle stick to the plastic piece. Try to create a 90 degree angle like the picture. 15. Tape both sides. 16. Tape down the servo. 17. Make sure the servo can rotate the hand up and down.","title":"Wiring Steps"},{"location":"servos/#coding-high-five-machine","text":"","title":"Coding High Five Machine"},{"location":"servos/#steps-for-wave","text":"1. Undo the tape and make plastic piece lay flat with the popsicle stick. 2. Tape it up","title":"Steps For Wave"},{"location":"servos/#coding-the-wave","text":"","title":"Coding The Wave"},{"location":"servos/#how-to-create-a-wave-block","text":"","title":"How to create a wave block"},{"location":"servos/#challenge","text":"Using the wave block you created. Write code that will make a wave when the button is pressed.","title":"Challenge"},{"location":"servos/#review","text":"What is a variable? What is a servo? What is a push button? How do you create a custom block? What kinds of projects would you like to build with this?","title":"Review"},{"location":"what-is-an-arduino/","text":"What is an Arduino? Objective To learn all the parts of an Arduino and how to upload code. Kit Bill of Materials 1 x Arduino with cable What is an Arduino? The Arduino is a cheap real time computer that costs around 7 dollars. Real time means that will execute your code really fast. It can do this because there is no operating system running on the Arduino. The only thing it's doing is running your code. :) What are pins? Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. Where is the Arduino's brain? What are the RX and TX leds and pins? They pins that are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino the TX LED lights up. Whenever a message is being received the RX led lights up. Reset Button (reloads the program) This will restart the Arduino with the code that is already on it. Internal Led This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"What is an Arduino?"},{"location":"what-is-an-arduino/#what-is-an-arduino","text":"","title":"What is an Arduino?"},{"location":"what-is-an-arduino/#objective","text":"To learn all the parts of an Arduino and how to upload code.","title":"Objective"},{"location":"what-is-an-arduino/#kit","text":"","title":"Kit"},{"location":"what-is-an-arduino/#bill-of-materials","text":"1 x Arduino with cable","title":"Bill of Materials"},{"location":"what-is-an-arduino/#what-is-an-arduino_1","text":"The Arduino is a cheap real time computer that costs around 7 dollars. Real time means that will execute your code really fast. It can do this because there is no operating system running on the Arduino. The only thing it's doing is running your code. :)","title":"What is an Arduino?"},{"location":"what-is-an-arduino/#what-are-pins","text":"Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic.","title":"What are pins?"},{"location":"what-is-an-arduino/#where-is-the-arduinos-brain","text":"","title":"Where is the Arduino's brain?"},{"location":"what-is-an-arduino/#what-are-the-rx-and-tx-leds-and-pins","text":"They pins that are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino the TX LED lights up. Whenever a message is being received the RX led lights up.","title":"What are the RX and TX leds and pins?"},{"location":"what-is-an-arduino/#reset-button-reloads-the-program","text":"This will restart the Arduino with the code that is already on it.","title":"Reset Button (reloads the program)"},{"location":"what-is-an-arduino/#internal-led","text":"This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"Internal Led"}]}