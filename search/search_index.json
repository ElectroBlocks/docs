{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Board Selector Block This block is always present. It allows you to switch between the different types of Arduinos. Loop Block This block will run forever on a real Arduino, but will only run 3 times through the virtual circuit. What this means is that all the blocks inside the loop block will run 3 times. You can change this number to whatever positive number you want. Building a circuit As you drag blocks into the loop block the circuit starts to update. Blocks outside the loop are disabled There are few exceptions to this, like setup blocks. We'll go over them in a later tutorial. :) Playing Circuit Use the play button to see the circuit in action. How to see the code Question about a block? If you have a question about a block click on the question mark. Navbar","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#board-selector-block","text":"This block is always present. It allows you to switch between the different types of Arduinos.","title":"Board Selector Block"},{"location":"#loop-block","text":"This block will run forever on a real Arduino, but will only run 3 times through the virtual circuit. What this means is that all the blocks inside the loop block will run 3 times. You can change this number to whatever positive number you want.","title":"Loop Block"},{"location":"#building-a-circuit","text":"As you drag blocks into the loop block the circuit starts to update.","title":"Building a circuit"},{"location":"#blocks-outside-the-loop-are-disabled","text":"There are few exceptions to this, like setup blocks. We'll go over them in a later tutorial. :)","title":"Blocks outside the loop are disabled"},{"location":"#playing-circuit","text":"Use the play button to see the circuit in action.","title":"Playing Circuit"},{"location":"#how-to-see-the-code","text":"","title":"How to see the code"},{"location":"#question-about-a-block","text":"If you have a question about a block click on the question mark.","title":"Question about a block?"},{"location":"#navbar","text":"","title":"Navbar"},{"location":"addons/","text":"Addons Breadboard The breadboard is used to prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that is plugged into it. The green lines represent how which pins share electricity. In the middle of the board, pins connected up and down share electricity. On the side of the board, pins are connected side to side. Led Led stands for light-emitting diode. A diode is an electronic component that allows electricity to flow one way. The important thing to note is the wires connected to it. The long wire is positive, and the short wire is negative. When you pass electricity through it, it will emit light. Resistor Resistors are used to decrease the number of electrons flowing through the wire. The colored bands mark the strength of the resistor. You can use the calculator to learn more.","title":"Addons"},{"location":"addons/#addons","text":"","title":"Addons"},{"location":"addons/#breadboard","text":"The breadboard is used to prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that is plugged into it. The green lines represent how which pins share electricity. In the middle of the board, pins connected up and down share electricity. On the side of the board, pins are connected side to side.","title":"Breadboard"},{"location":"addons/#led","text":"Led stands for light-emitting diode. A diode is an electronic component that allows electricity to flow one way. The important thing to note is the wires connected to it. The long wire is positive, and the short wire is negative. When you pass electricity through it, it will emit light.","title":"Led"},{"location":"addons/#resistor","text":"Resistors are used to decrease the number of electrons flowing through the wire. The colored bands mark the strength of the resistor. You can use the calculator to learn more.","title":"Resistor"},{"location":"blocks/","text":"Blocks Loop Blocks inside the block will run forever on the actual Arduino. It will be from top to bottom, and once it reaches the bottom block, it will go back to the top block. The simulator on the right of the screen will run three times. Led The LED block controls whether an led is on or off. The first drop-down decides which Arduino Pin the led is connected to. The second dropdown turns the LED on or off. Wait The wait block will pause the Arduino.","title":"Blocks"},{"location":"blocks/#blocks","text":"","title":"Blocks"},{"location":"blocks/#loop","text":"Blocks inside the block will run forever on the actual Arduino. It will be from top to bottom, and once it reaches the bottom block, it will go back to the top block. The simulator on the right of the screen will run three times.","title":"Loop"},{"location":"blocks/#led","text":"The LED block controls whether an led is on or off. The first drop-down decides which Arduino Pin the led is connected to. The second dropdown turns the LED on or off.","title":"Led"},{"location":"blocks/#wait","text":"The wait block will pause the Arduino.","title":"Wait"},{"location":"howto/debug/","text":"How to debug code on the Arduino in Electroblocks? Steps 1. Download the project and open it in ElectroBlock . 2. Click on the microchip menu option. 3. Click the upload button. It will be on the bottom right of your screen. 4. Choose the Arduino USB Option It usually the one that has the word USB in it. 5. After the code is uploaded click the connect button. It will be on the bottom right of your screen. 6. Watch the debug menu The green button is used to unpause the Arduino. The red stop button will stop debugging all together. Click the green button and see the values update on your arduino.","title":"Debuging"},{"location":"howto/debug/#how-to-debug-code-on-the-arduino-in-electroblocks","text":"","title":"How to debug code on the Arduino in Electroblocks?"},{"location":"howto/debug/#steps","text":"1. Download the project and open it in ElectroBlock . 2. Click on the microchip menu option. 3. Click the upload button. It will be on the bottom right of your screen. 4. Choose the Arduino USB Option It usually the one that has the word USB in it. 5. After the code is uploaded click the connect button. It will be on the bottom right of your screen. 6. Watch the debug menu The green button is used to unpause the Arduino. The red stop button will stop debugging all together. Click the green button and see the values update on your arduino.","title":"Steps"},{"location":"howto/openproject/","text":"How to open a project in ElectroBlocks. Steps 1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Open Project"},{"location":"howto/openproject/#how-to-open-a-project-in-electroblocks","text":"","title":"How to open a project in ElectroBlocks."},{"location":"howto/openproject/#steps","text":"1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Steps"},{"location":"howto/saveproject/","text":"How to save a project in ElectroBlocks Steps 1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Save Project"},{"location":"howto/saveproject/#how-to-save-a-project-in-electroblocks","text":"","title":"How to save a project in ElectroBlocks"},{"location":"howto/saveproject/#steps","text":"1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Steps"},{"location":"howto/uploading-code/","text":"Uploading Coding Warning To upload code you need enable a flag in google chrome. This will only work with the google chrome browser. You do this at your own risk. Steps 1. In a separate tab type in chrome://flags 2. Search for Experimental Web Platform features & enable it. This will require you to relaunch your web browser. Click the relaunch button at the bottom of your screen. 3. Click on the MicroChip Menu Option 4. Click on the upload button This will be on the bottom right of your screen. 5. Select the Arduino Option It's usually the one that says USB. Once you click connect, it usually takes 5 to 15 seconds.","title":"Uploading Coding"},{"location":"howto/uploading-code/#uploading-coding","text":"","title":"Uploading Coding"},{"location":"howto/uploading-code/#warning","text":"To upload code you need enable a flag in google chrome. This will only work with the google chrome browser. You do this at your own risk.","title":"Warning"},{"location":"howto/uploading-code/#steps","text":"1. In a separate tab type in chrome://flags 2. Search for Experimental Web Platform features & enable it. This will require you to relaunch your web browser. Click the relaunch button at the bottom of your screen. 3. Click on the MicroChip Menu Option 4. Click on the upload button This will be on the bottom right of your screen. 5. Select the Arduino Option It's usually the one that says USB. Once you click connect, it usually takes 5 to 15 seconds.","title":"Steps"},{"location":"lessons/blink/","text":"Blink What you will learn How to write and basic program to control leds and how to uplaod that code to the Arduino. Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x Leds 2 x Resistors (100 - 400 ohms) 5 x led wires Blocks Loop Led Wait Wiring Diagram Steps First LED 1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from - of the breadboard to a GND pin on the Arduino. 3. Connect a wire from (28, A) to the - of the breadboard. 4. Insert the led's short (-) wire into (28, E) and the led's long (+) wire into (29,E). 5. Connect a resistor from (29, D) to (31, D). 6. Connect a wire from (31, A) to pin 7 on the Arduino. 7. Connect the Arduino into the computer. Steps Second LED 1. Connect a wire from (40, A) to the - of the breadboard. 2. Insert the led's short (-) wire into (40, E) and the led's long (+) wire into (41,E). 3. Connect a resistor from wiring (41, D) to (43, D). 4. Connect a wire from (43, A) to pin 4 on the Arduino. Review What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Blink"},{"location":"lessons/blink/#blink","text":"","title":"Blink"},{"location":"lessons/blink/#what-you-will-learn","text":"How to write and basic program to control leds and how to uplaod that code to the Arduino.","title":"What you will learn"},{"location":"lessons/blink/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x Leds 2 x Resistors (100 - 400 ohms) 5 x led wires","title":"Bill of Materials"},{"location":"lessons/blink/#blocks","text":"Loop Led Wait","title":"Blocks"},{"location":"lessons/blink/#wiring-diagram","text":"","title":"Wiring Diagram"},{"location":"lessons/blink/#steps-first-led","text":"1. Have the front of the Arduino face towards 1 of the breadboard. 2. Connect a wire from - of the breadboard to a GND pin on the Arduino. 3. Connect a wire from (28, A) to the - of the breadboard. 4. Insert the led's short (-) wire into (28, E) and the led's long (+) wire into (29,E). 5. Connect a resistor from (29, D) to (31, D). 6. Connect a wire from (31, A) to pin 7 on the Arduino. 7. Connect the Arduino into the computer.","title":"Steps First LED"},{"location":"lessons/blink/#steps-second-led","text":"1. Connect a wire from (40, A) to the - of the breadboard. 2. Insert the led's short (-) wire into (40, E) and the led's long (+) wire into (41,E). 3. Connect a resistor from wiring (41, D) to (43, D). 4. Connect a wire from (43, A) to pin 4 on the Arduino.","title":"Steps Second LED"},{"location":"lessons/blink/#review","text":"What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Review"},{"location":"lessons/highfive/","text":"HighFive Objective To learn how to use servos to build a highfive machine. Bill of Materials Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape Project Video What is a servo A servo is a motor that allows you to control its exact rotation. You do this by telling the Arduino how many degrees to rotate it. What is a push button or switch? A push-button or switch is an electric component that turns on and off electricity. Servo Block The servo block is used to control a servo. The pin number controls which pin is connected to the Arduino. The degrees hold what position to rotate the servo to. Button Setup Block This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit. Steps 1. Connect one wire of the push button to (25, E) and the other wire to (27, E) of the breadboard. 2. Connect a wire from (25, A) to the - of the breadboard. 3. Connect a wire from (27, A) to pin 7 on the Arduino. 4. Connect a wire from the data wire (orange) of the servo to (46, E) on the breadboard. 5. Connect a wire from the volts wire (red) of the servo to (45, E) on the breadboard. 6. Connect a wire from the ground wire (brown) of the servo to (43, E) on the breadboard. 7. Connect a wire from (43, A) to the - of the breadboard. 8. Connect a wire from (45, A) to the + of the breadboard. 9. Connect a wire from (46, A) to pin 3 on the Arduino. 10. Connect a wire from - on the breadboard to a GND pin on the Arduino. 11. Connect a wire from + on the breadboard to the 5v pin on the Arduino. 12. Trace and cut your hand on a piece of posterboard. 13. Tape the popsicle stick to your posterboard hand. 14. Tape the popsicle stick to the piece of plastic that connects to the servo. They should create a 90 degree angle with each other. 15. Tape the servo a table. 16. Make sure the popsicle can rotate with the servo. Coding Review What is a servo? What are if blocks used for? What is a button or switch used for? Can you use what you learned to write code to make leds turn on and off with a button?","title":"HighFive"},{"location":"lessons/highfive/#highfive","text":"","title":"HighFive"},{"location":"lessons/highfive/#objective","text":"To learn how to use servos to build a highfive machine.","title":"Objective"},{"location":"lessons/highfive/#bill-of-materials","text":"Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape","title":"Bill of Materials"},{"location":"lessons/highfive/#project","text":"","title":"Project"},{"location":"lessons/highfive/#video","text":"","title":"Video"},{"location":"lessons/highfive/#what-is-a-servo","text":"A servo is a motor that allows you to control its exact rotation. You do this by telling the Arduino how many degrees to rotate it.","title":"What is a servo"},{"location":"lessons/highfive/#what-is-a-push-button-or-switch","text":"A push-button or switch is an electric component that turns on and off electricity.","title":"What is a push button or switch?"},{"location":"lessons/highfive/#servo-block","text":"The servo block is used to control a servo. The pin number controls which pin is connected to the Arduino. The degrees hold what position to rotate the servo to.","title":"Servo Block"},{"location":"lessons/highfive/#button-setup-block","text":"This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit.","title":"Button Setup Block"},{"location":"lessons/highfive/#steps","text":"1. Connect one wire of the push button to (25, E) and the other wire to (27, E) of the breadboard. 2. Connect a wire from (25, A) to the - of the breadboard. 3. Connect a wire from (27, A) to pin 7 on the Arduino. 4. Connect a wire from the data wire (orange) of the servo to (46, E) on the breadboard. 5. Connect a wire from the volts wire (red) of the servo to (45, E) on the breadboard. 6. Connect a wire from the ground wire (brown) of the servo to (43, E) on the breadboard. 7. Connect a wire from (43, A) to the - of the breadboard. 8. Connect a wire from (45, A) to the + of the breadboard. 9. Connect a wire from (46, A) to pin 3 on the Arduino. 10. Connect a wire from - on the breadboard to a GND pin on the Arduino. 11. Connect a wire from + on the breadboard to the 5v pin on the Arduino. 12. Trace and cut your hand on a piece of posterboard. 13. Tape the popsicle stick to your posterboard hand. 14. Tape the popsicle stick to the piece of plastic that connects to the servo. They should create a 90 degree angle with each other. 15. Tape the servo a table. 16. Make sure the popsicle can rotate with the servo.","title":"Steps"},{"location":"lessons/highfive/#coding","text":"","title":"Coding"},{"location":"lessons/highfive/#review","text":"What is a servo? What are if blocks used for? What is a button or switch used for? Can you use what you learned to write code to make leds turn on and off with a button?","title":"Review"},{"location":"lessons/messages/","text":"Messages Objective To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson . Kit Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires Project Video Message Setup Block This is a library block that is required for the Arduino to send and receive messages. Notice the stuff below the \"---------------.\" This where you will tell the virtual Arduino what messages it supposes to receive. The loop dropdown box is used to describe what to receive during which loop. This allows us to test a lot of situations without having an Arduino present. If Block If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run. Comparison Block The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value. Coding it up","title":"Messages"},{"location":"lessons/messages/#messages","text":"","title":"Messages"},{"location":"lessons/messages/#objective","text":"To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson .","title":"Objective"},{"location":"lessons/messages/#kit","text":"","title":"Kit"},{"location":"lessons/messages/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires","title":"Bill of Materials"},{"location":"lessons/messages/#project","text":"","title":"Project"},{"location":"lessons/messages/#video","text":"","title":"Video"},{"location":"lessons/messages/#message-setup-block","text":"This is a library block that is required for the Arduino to send and receive messages. Notice the stuff below the \"---------------.\" This where you will tell the virtual Arduino what messages it supposes to receive. The loop dropdown box is used to describe what to receive during which loop. This allows us to test a lot of situations without having an Arduino present.","title":"Message Setup Block"},{"location":"lessons/messages/#if-block","text":"If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run.","title":"If Block"},{"location":"lessons/messages/#comparison-block","text":"The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value.","title":"Comparison Block"},{"location":"lessons/messages/#coding-it-up","text":"","title":"Coding it up"},{"location":"lessons/neopixel/","text":"Neo Pixels Objective To learn how to control rgb led lights (neo pixels) with loops. Kit Bill of Materials Arduino Uno x 1 RGB LED Light Strip x 1 Wires x 3 Project Video What are neopixels? It's a strip of RGB LEDs that are connected. You can control each of the LEDs' color using RGB. Arrows Notice that the metal connecting neopixels are labeled. The DI pin is the pin that will tell the NeoPixels what color to change to. Notice the arrow. The Arduino will connect with the neopixel at the start of the arrows. NeoPixel Setup Block This block is required to set up neopixels. You set the number of LEDs in the strip, the pin used to control the LEDs, and the brightness level between 1 to 20. 20 for maximum brightness. Count With Block (loop). This block will create a number variable that will start at the \"from number\". In the picture, the variable's name is \"i\". It will increase or decrease \"i\" until it equals the to number. You can control the amount that the variable will change by changing the \"by adding\" number. Steps 1. Place the Arduino so the analog pins are next to the neopixel. 2. Connect a wire from a GND pin on the Arduino to the GND of the neopixel. 3. Connect a wire from A0 of the Arduino to data (DI) pin of the neopixel. 4. Connect a wire from 5v of the Arduino to 5v of the neopixel. Test Code Solid Colors Rainbow Challenge Try to make a rainbow pattern. I used the colors from this website to make the rainbow. Solution Video Christmas Light Pattern Snake","title":"Neo Pixels"},{"location":"lessons/neopixel/#neo-pixels","text":"","title":"Neo Pixels"},{"location":"lessons/neopixel/#objective","text":"To learn how to control rgb led lights (neo pixels) with loops.","title":"Objective"},{"location":"lessons/neopixel/#kit","text":"","title":"Kit"},{"location":"lessons/neopixel/#bill-of-materials","text":"Arduino Uno x 1 RGB LED Light Strip x 1 Wires x 3","title":"Bill of Materials"},{"location":"lessons/neopixel/#project","text":"","title":"Project"},{"location":"lessons/neopixel/#video","text":"","title":"Video"},{"location":"lessons/neopixel/#what-are-neopixels","text":"It's a strip of RGB LEDs that are connected. You can control each of the LEDs' color using RGB.","title":"What are neopixels?"},{"location":"lessons/neopixel/#arrows","text":"Notice that the metal connecting neopixels are labeled. The DI pin is the pin that will tell the NeoPixels what color to change to. Notice the arrow. The Arduino will connect with the neopixel at the start of the arrows.","title":"Arrows"},{"location":"lessons/neopixel/#neopixel-setup-block","text":"This block is required to set up neopixels. You set the number of LEDs in the strip, the pin used to control the LEDs, and the brightness level between 1 to 20. 20 for maximum brightness.","title":"NeoPixel Setup Block"},{"location":"lessons/neopixel/#count-with-block-loop","text":"This block will create a number variable that will start at the \"from number\". In the picture, the variable's name is \"i\". It will increase or decrease \"i\" until it equals the to number. You can control the amount that the variable will change by changing the \"by adding\" number.","title":"Count With Block (loop)."},{"location":"lessons/neopixel/#steps","text":"1. Place the Arduino so the analog pins are next to the neopixel. 2. Connect a wire from a GND pin on the Arduino to the GND of the neopixel. 3. Connect a wire from A0 of the Arduino to data (DI) pin of the neopixel. 4. Connect a wire from 5v of the Arduino to 5v of the neopixel.","title":"Steps"},{"location":"lessons/neopixel/#test-code","text":"","title":"Test Code"},{"location":"lessons/neopixel/#solid-colors","text":"","title":"Solid Colors"},{"location":"lessons/neopixel/#rainbow-challenge","text":"Try to make a rainbow pattern. I used the colors from this website to make the rainbow.","title":"Rainbow Challenge"},{"location":"lessons/neopixel/#solution-video","text":"","title":"Solution Video"},{"location":"lessons/neopixel/#christmas-light-pattern","text":"","title":"Christmas Light Pattern"},{"location":"lessons/neopixel/#snake","text":"","title":"Snake"},{"location":"lessons/rgbled/","text":"RGB LED Objective To learn how to control an RGB LED with an Arduino and a computer. Kit Bill of Materials Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3 Project Video What is RGB? RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example. What is an RGB LED? An RGB led is an led that allows you to set its color. You send an electrical signal to each color wire to control the amount of color of each you want. The largest wire is ground. Get Part of the text block This block will take a text block and will return a part of it. In the example above, the block would return blue. If you wanted it to return red, you would change the position to 2. Text to number block This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino receives a message, it's text. Steps 1. Insert the rgb led into the breadboard. The red wire goes into (9, E). The ground wire goes into (10, E). The green wire goes into (13, E). The blue wire goes into (15, E). 2. Connect a wire from (10, A) to the - of the breadboard. 3. Connect a wire from (15, A) to pin 9 on the Arduino. 4. Connect a wire from (13, A) to pin 10 on the Arduino. 5. Connect a wire from (9, A) to pin 11 on the Arduino. 6. Insert a resistors into (9, B) to (9, D), (13, B) to (13, D), and (15, B) to (15, D) in the breadboard. 7. Connect a wire from - of the breadboard to a GND pin on the Arduino. Test Coding Coding","title":"RGB LED"},{"location":"lessons/rgbled/#rgb-led","text":"","title":"RGB LED"},{"location":"lessons/rgbled/#objective","text":"To learn how to control an RGB LED with an Arduino and a computer.","title":"Objective"},{"location":"lessons/rgbled/#kit","text":"","title":"Kit"},{"location":"lessons/rgbled/#bill-of-materials","text":"Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3","title":"Bill of Materials"},{"location":"lessons/rgbled/#project","text":"","title":"Project"},{"location":"lessons/rgbled/#video","text":"","title":"Video"},{"location":"lessons/rgbled/#what-is-rgb","text":"RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example.","title":"What is RGB?"},{"location":"lessons/rgbled/#what-is-an-rgb-led","text":"An RGB led is an led that allows you to set its color. You send an electrical signal to each color wire to control the amount of color of each you want. The largest wire is ground.","title":"What is an RGB LED?"},{"location":"lessons/rgbled/#get-part-of-the-text-block","text":"This block will take a text block and will return a part of it. In the example above, the block would return blue. If you wanted it to return red, you would change the position to 2.","title":"Get Part of the text block"},{"location":"lessons/rgbled/#text-to-number-block","text":"This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino receives a message, it's text.","title":"Text to number block"},{"location":"lessons/rgbled/#steps","text":"1. Insert the rgb led into the breadboard. The red wire goes into (9, E). The ground wire goes into (10, E). The green wire goes into (13, E). The blue wire goes into (15, E). 2. Connect a wire from (10, A) to the - of the breadboard. 3. Connect a wire from (15, A) to pin 9 on the Arduino. 4. Connect a wire from (13, A) to pin 10 on the Arduino. 5. Connect a wire from (9, A) to pin 11 on the Arduino. 6. Insert a resistors into (9, B) to (9, D), (13, B) to (13, D), and (15, B) to (15, D) in the breadboard. 7. Connect a wire from - of the breadboard to a GND pin on the Arduino.","title":"Steps"},{"location":"lessons/rgbled/#test-coding","text":"","title":"Test Coding"},{"location":"lessons/rgbled/#coding","text":"","title":"Coding"},{"location":"lessons/wave/","text":"Wave Objective To learn how to build a wave machine with the servo. Bill of Materials Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape Project Video What is a variable? A variable is how the computer stores information that can change. The information that it stores is called its value. The way you get the value that a variable store is by using the get variable block and its name. A variable also has a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color Steps 1. Tape the popsicle stick to the piece of plastic that connects to the servo. They should be parallel with each other. 2. Reattach the plastic piece to the servo. Coding Challenge Write code so that only when the button is pressed does the wave.","title":"Wave"},{"location":"lessons/wave/#wave","text":"","title":"Wave"},{"location":"lessons/wave/#objective","text":"To learn how to build a wave machine with the servo.","title":"Objective"},{"location":"lessons/wave/#bill-of-materials","text":"Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape","title":"Bill of Materials"},{"location":"lessons/wave/#project","text":"","title":"Project"},{"location":"lessons/wave/#video","text":"","title":"Video"},{"location":"lessons/wave/#what-is-a-variable","text":"A variable is how the computer stores information that can change. The information that it stores is called its value. The way you get the value that a variable store is by using the get variable block and its name. A variable also has a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color","title":"What is a variable?"},{"location":"lessons/wave/#steps","text":"1. Tape the popsicle stick to the piece of plastic that connects to the servo. They should be parallel with each other. 2. Reattach the plastic piece to the servo.","title":"Steps"},{"location":"lessons/wave/#coding","text":"","title":"Coding"},{"location":"lessons/wave/#challenge","text":"Write code so that only when the button is pressed does the wave.","title":"Challenge"},{"location":"lessons/what-is-an-arduino/","text":"What is an Arduino? Objective To learn what an Arduino is and some of the parts of an Arduino? Kit Bill of Materials 1 x Arduino with cable Video What is an Arduino? An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno. What are pins? Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens. Where is the Arduino's brain? What are the RX and TX leds and pins? These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up. Reset Button (reloads the program) This will restart the Arduino with the code that is already on it. Internal Led This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino","text":"","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#objective","text":"To learn what an Arduino is and some of the parts of an Arduino?","title":"Objective"},{"location":"lessons/what-is-an-arduino/#kit","text":"","title":"Kit"},{"location":"lessons/what-is-an-arduino/#bill-of-materials","text":"1 x Arduino with cable","title":"Bill of Materials"},{"location":"lessons/what-is-an-arduino/#video","text":"","title":"Video"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino_1","text":"An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-are-pins","text":"Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens.","title":"What are pins?"},{"location":"lessons/what-is-an-arduino/#where-is-the-arduinos-brain","text":"","title":"Where is the Arduino's brain?"},{"location":"lessons/what-is-an-arduino/#what-are-the-rx-and-tx-leds-and-pins","text":"These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up.","title":"What are the RX and TX leds and pins?"},{"location":"lessons/what-is-an-arduino/#reset-button-reloads-the-program","text":"This will restart the Arduino with the code that is already on it.","title":"Reset Button (reloads the program)"},{"location":"lessons/what-is-an-arduino/#internal-led","text":"This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"Internal Led"}]}