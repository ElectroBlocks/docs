{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Board Selector Block This block is always present. It allows you to switch between the different types of Arduinos. Loop Block This block will run forever on a real Arduino, but will only run 3 times through the virtual circuit. What this means is that all the blocks inside the loop block will run 3 times. You can change this number to whatever positive number you want. Building a circuit As you drag blocks into the loop block the circuit starts to update. Blocks outside the loop are disabled There are few exceptions to this, like setup blocks. We'll go over them in a later tutorial. :) Playing Circuit Use the play button to see the circuit in action. How to see the code Question about a block? If you have a question about a block click on the question mark. Navbar","title":"Getting Started"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#board-selector-block","text":"This block is always present. It allows you to switch between the different types of Arduinos.","title":"Board Selector Block"},{"location":"#loop-block","text":"This block will run forever on a real Arduino, but will only run 3 times through the virtual circuit. What this means is that all the blocks inside the loop block will run 3 times. You can change this number to whatever positive number you want.","title":"Loop Block"},{"location":"#building-a-circuit","text":"As you drag blocks into the loop block the circuit starts to update.","title":"Building a circuit"},{"location":"#blocks-outside-the-loop-are-disabled","text":"There are few exceptions to this, like setup blocks. We'll go over them in a later tutorial. :)","title":"Blocks outside the loop are disabled"},{"location":"#playing-circuit","text":"Use the play button to see the circuit in action.","title":"Playing Circuit"},{"location":"#how-to-see-the-code","text":"","title":"How to see the code"},{"location":"#question-about-a-block","text":"If you have a question about a block click on the question mark.","title":"Question about a block?"},{"location":"#navbar","text":"","title":"Navbar"},{"location":"howto/debug/","text":"How to debug code on the Arduino in Electroblocks? Steps 1. Download the project and open it in ElectroBlock . 2. Click on the microchip menu option. 3. Click the upload button. It will be on the bottom right of your screen. 4. Choose the Arduino USB Option It usually the one that has the word USB in it. 5. After the code is uploaded click the connect button. It will be on the bottom right of your screen. 6. Watch the debug menu The green button is used to unpause the Arduino. The red stop button will stop debugging all together. Click the green button and see the values update on your arduino.","title":"Debuging"},{"location":"howto/debug/#how-to-debug-code-on-the-arduino-in-electroblocks","text":"","title":"How to debug code on the Arduino in Electroblocks?"},{"location":"howto/debug/#steps","text":"1. Download the project and open it in ElectroBlock . 2. Click on the microchip menu option. 3. Click the upload button. It will be on the bottom right of your screen. 4. Choose the Arduino USB Option It usually the one that has the word USB in it. 5. After the code is uploaded click the connect button. It will be on the bottom right of your screen. 6. Watch the debug menu The green button is used to unpause the Arduino. The red stop button will stop debugging all together. Click the green button and see the values update on your arduino.","title":"Steps"},{"location":"howto/openproject/","text":"How to open a project in ElectroBlocks. Steps 1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Open Project"},{"location":"howto/openproject/#how-to-open-a-project-in-electroblocks","text":"","title":"How to open a project in ElectroBlocks."},{"location":"howto/openproject/#steps","text":"1. Login to ElectroBlocks. Click on the login icon highlighted then click on the sign in with the Google button. The icon will be on the top right of your screen. 2. Click on the folder in the midde of your screen. Then click on open button of the project you want to open. You can also open an ElectroBlock project file by clicking the choose project text.","title":"Steps"},{"location":"howto/saveproject/","text":"How to save a project in ElectroBlocks Steps 1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Save Project"},{"location":"howto/saveproject/#how-to-save-a-project-in-electroblocks","text":"","title":"How to save a project in ElectroBlocks"},{"location":"howto/saveproject/#steps","text":"1. Click the login button. You must have a Gmail account to log in. The login button is on the top right side of the screen. 2. Click the sign in with Google button. This will take you through the signing in. 3. Click on the wrench icon. Fill out the form and click save to save the project.","title":"Steps"},{"location":"howto/uploading-code/","text":"Uploading Coding Warning To upload code you need enable a flag in google chrome. This will only work with the google chrome browser. You do this at your own risk. Steps 1. In a separate tab type in chrome://flags 2. Search for Experimental Web Platform features & enable it. This will require you to relaunch your web browser. Click the relaunch button at the bottom of your screen. 3. Click on the MicroChip Menu Option 4. Click on the upload button This will be on the bottom right of your screen. 5. Select the Arduino Option It's usually the one that says USB. Once you click connect, it usually takes 5 to 15 seconds.","title":"Uploading Code"},{"location":"howto/uploading-code/#uploading-coding","text":"","title":"Uploading Coding"},{"location":"howto/uploading-code/#warning","text":"To upload code you need enable a flag in google chrome. This will only work with the google chrome browser. You do this at your own risk.","title":"Warning"},{"location":"howto/uploading-code/#steps","text":"1. In a separate tab type in chrome://flags 2. Search for Experimental Web Platform features & enable it. This will require you to relaunch your web browser. Click the relaunch button at the bottom of your screen. 3. Click on the MicroChip Menu Option 4. Click on the upload button This will be on the bottom right of your screen. 5. Select the Arduino Option It's usually the one that says USB. Once you click connect, it usually takes 5 to 15 seconds.","title":"Steps"},{"location":"lessons/blink/","text":"Blink Objective How to write and basic program to control leds and how to uplaod that code to the Arduino. Kit Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires Project Video Components Led Led stands for light-emitting diode. A diode is an electronic component that allows electricity to flow one way. The important thing to note is the wires connected to it. The long wire is positive, and the short wire is negative. When you pass electricity through it, it will emit light. Resistor Resistors are used to decrease the number of electrons flowing through the wire. The colored bands mark the strength of the resistor. You can use the calculator to learn more. Breadboard The breadboard is used to prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that is plugged into it. The green lines represent how which pins share electricity. In the middle of the board, pins connected up and down share electricity. On the side of the board, pins are connected side to side. Code In a real Arduino, the blocks inside the loop block will run on repeatedly until the Arduino loses power. The first blocks to run will be the ones on top. Notice the loop block has (runs x times) in it. That is how many times it will run on the virtual circuit. Steps Wiring the first led 1. Insert the led positive (long) end of the led into (27, E) and the short (-) end into (25, E). 2. Connect a resistor from (27, D) to (27, B). 3. Connect a wire from - of the breadboard to (25, A). 4. Connect a wire from (27, A) to pin 7 on the Arduino. 5. Connect a wire from - of the breadboard to GND of the Arduino. Uploading Test Code It takes about 10 seconds to upload code on the real Arduino. I editted it out of the videos. Go to electroblocks.org Coding Blink Wiring the second led 1. Connect the long end of the led into hole (37, E) and the short into (36, E). 2. Connect a wire from (36, A) to the ground - line of the breadboard. 3. Connect a resistor from (37, D) to (37, B). 4. Connect a wire from (37, A) to pin 5 on the Arduino. Challenge make both leds blink at the same time. Challenge make the led alternate on and off Review What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Blink"},{"location":"lessons/blink/#blink","text":"","title":"Blink"},{"location":"lessons/blink/#objective","text":"How to write and basic program to control leds and how to uplaod that code to the Arduino.","title":"Objective"},{"location":"lessons/blink/#kit","text":"","title":"Kit"},{"location":"lessons/blink/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires","title":"Bill of Materials"},{"location":"lessons/blink/#project","text":"","title":"Project"},{"location":"lessons/blink/#video","text":"","title":"Video"},{"location":"lessons/blink/#components","text":"","title":"Components"},{"location":"lessons/blink/#led","text":"Led stands for light-emitting diode. A diode is an electronic component that allows electricity to flow one way. The important thing to note is the wires connected to it. The long wire is positive, and the short wire is negative. When you pass electricity through it, it will emit light.","title":"Led"},{"location":"lessons/blink/#resistor","text":"Resistors are used to decrease the number of electrons flowing through the wire. The colored bands mark the strength of the resistor. You can use the calculator to learn more.","title":"Resistor"},{"location":"lessons/blink/#breadboard","text":"The breadboard is used to prototype electronic projects without gluing the wires together with metal. It does this by allowing wires to share electricity that is plugged into it. The green lines represent how which pins share electricity. In the middle of the board, pins connected up and down share electricity. On the side of the board, pins are connected side to side.","title":"Breadboard"},{"location":"lessons/blink/#code","text":"In a real Arduino, the blocks inside the loop block will run on repeatedly until the Arduino loses power. The first blocks to run will be the ones on top. Notice the loop block has (runs x times) in it. That is how many times it will run on the virtual circuit.","title":"Code"},{"location":"lessons/blink/#steps","text":"","title":"Steps"},{"location":"lessons/blink/#wiring-the-first-led","text":"1. Insert the led positive (long) end of the led into (27, E) and the short (-) end into (25, E). 2. Connect a resistor from (27, D) to (27, B). 3. Connect a wire from - of the breadboard to (25, A). 4. Connect a wire from (27, A) to pin 7 on the Arduino. 5. Connect a wire from - of the breadboard to GND of the Arduino.","title":"Wiring the first led"},{"location":"lessons/blink/#uploading-test-code","text":"It takes about 10 seconds to upload code on the real Arduino. I editted it out of the videos. Go to electroblocks.org","title":"Uploading Test Code"},{"location":"lessons/blink/#coding-blink","text":"","title":"Coding Blink"},{"location":"lessons/blink/#wiring-the-second-led","text":"1. Connect the long end of the led into hole (37, E) and the short into (36, E). 2. Connect a wire from (36, A) to the ground - line of the breadboard. 3. Connect a resistor from (37, D) to (37, B). 4. Connect a wire from (37, A) to pin 5 on the Arduino.","title":"Wiring the second led"},{"location":"lessons/blink/#challenge-make-both-leds-blink-at-the-same-time","text":"","title":"Challenge make both leds blink at the same time."},{"location":"lessons/blink/#challenge-make-the-led-alternate-on-and-off","text":"","title":"Challenge make the led alternate on and off"},{"location":"lessons/blink/#review","text":"What is an led? What is the first block that gets executed in the loop block? What does the delay block do? What is a breadboard?","title":"Review"},{"location":"lessons/messages/","text":"Messages Objective To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson . Kit Bill of Materials 1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires Project Video Message Setup Block This is a library block that is required for the Arduino to send and receive messages. Notice the stuff below the \"---------------.\" This where you will tell the virtual Arduino what messages it supposes to receive. The loop dropdown box is used to describe what to receive during which loop. This allows us to test a lot of situations without having an Arduino present. If Block If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run. Comparison Block The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value. Coding it up","title":"Messages"},{"location":"lessons/messages/#messages","text":"","title":"Messages"},{"location":"lessons/messages/#objective","text":"To also learn about receiving messages from the Arduino. This lesson requires that you build the circuit in the blink lesson .","title":"Objective"},{"location":"lessons/messages/#kit","text":"","title":"Kit"},{"location":"lessons/messages/#bill-of-materials","text":"1 x Arduino with cable 1 x Breadboard 2 x leds 2 x resistors (100 - 400 ohms) 5 x led wires","title":"Bill of Materials"},{"location":"lessons/messages/#project","text":"","title":"Project"},{"location":"lessons/messages/#video","text":"","title":"Video"},{"location":"lessons/messages/#message-setup-block","text":"This is a library block that is required for the Arduino to send and receive messages. Notice the stuff below the \"---------------.\" This where you will tell the virtual Arduino what messages it supposes to receive. The loop dropdown box is used to describe what to receive during which loop. This allows us to test a lot of situations without having an Arduino present.","title":"Message Setup Block"},{"location":"lessons/messages/#if-block","text":"If blocks are used to make decisions. If what is connected to the if part of the block is true then blocks in the do section will run.","title":"If Block"},{"location":"lessons/messages/#comparison-block","text":"The comparison block is used to compare two values. If it's set to \"=\" it will check return true if both blocks connectted to it have the same value.","title":"Comparison Block"},{"location":"lessons/messages/#coding-it-up","text":"","title":"Coding it up"},{"location":"lessons/neopixel/","text":"Neo Pixels Objective To learn how to control rgb led lights (neo pixels) with loops. Kit Bill of Materials Arduino Uno x 1 RGB LED Light Strip Jump Wires x 3 What is are neopixels / rgb led light strip? It's a bunch of rgb leds that are connected together. You can control each of the leds color using rgb. Note please buy 5 volt rgb leds that work with the Arduino.","title":"NeoPixels"},{"location":"lessons/neopixel/#neo-pixels","text":"","title":"Neo Pixels"},{"location":"lessons/neopixel/#objective","text":"To learn how to control rgb led lights (neo pixels) with loops.","title":"Objective"},{"location":"lessons/neopixel/#kit","text":"","title":"Kit"},{"location":"lessons/neopixel/#bill-of-materials","text":"Arduino Uno x 1 RGB LED Light Strip Jump Wires x 3","title":"Bill of Materials"},{"location":"lessons/neopixel/#what-is-are-neopixels-rgb-led-light-strip","text":"It's a bunch of rgb leds that are connected together. You can control each of the leds color using rgb. Note please buy 5 volt rgb leds that work with the Arduino.","title":"What is are neopixels / rgb led light strip?"},{"location":"lessons/rgbled/","text":"RGB LED Objective To learn how to control an RGB LED with an Arduino and a computer. Kit Bill of Materials Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3 What is RGB RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example. What is RGB LED An rgb led is an led that has 4 wires. One for red, green, and blue, and the other for ground. You send an electrical signal to each color wire to control the amount of each you want. The largest wire is ground. Get Part of the text block This block will take text block and will return a part of it. In the example above the block would return blue. If you wanted it to return red you would change the position to 2. Text to number block This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino recieves a message it's text. Steps 1. Insert the rgb led into the breadboard. The red wire goes into (42, E). The ground wire goes into (39, E). The green wire goes into (37, E). The blue wire goes into (35, E). 2. Connect a jumper wire into - of the breadboard to gnd pin of the Arduino. 3. Connect a resistor into (42, D) and (42, B) of the breadboard. 4. Connect a jumper wire into (42, A) and the other end into pin 6 of the Arduino. 5. Connect a jumper wire into (39, A) and the other end into - of the breadboard. 6. Connect a resistor into (37, D) and (37, B) of the breadboard. 7. Connect a jumper wire into (37, A) and the other end into pin 5 of the Arduino. 8. Connect a resistor into (35, D) and (35, B) of the breadboard. 9. Connect a jumper wire into (35, A) and the other end into pin 3 of the Arduino. Testing Wire Coding","title":"RGB LED"},{"location":"lessons/rgbled/#rgb-led","text":"","title":"RGB LED"},{"location":"lessons/rgbled/#objective","text":"To learn how to control an RGB LED with an Arduino and a computer.","title":"Objective"},{"location":"lessons/rgbled/#kit","text":"","title":"Kit"},{"location":"lessons/rgbled/#bill-of-materials","text":"Arduino Uno x 1 RGB LED x 1 Jump Wires x 5 breadboard x 1 resistors (300 to 1000 ohms) x 3","title":"Bill of Materials"},{"location":"lessons/rgbled/#what-is-rgb","text":"RGB stands for red, green and blue. The way it works is that you mix red, green, and blue together to create a color. Click on the input to see an example.","title":"What is RGB"},{"location":"lessons/rgbled/#what-is-rgb-led","text":"An rgb led is an led that has 4 wires. One for red, green, and blue, and the other for ground. You send an electrical signal to each color wire to control the amount of each you want. The largest wire is ground.","title":"What is RGB LED"},{"location":"lessons/rgbled/#get-part-of-the-text-block","text":"This block will take text block and will return a part of it. In the example above the block would return blue. If you wanted it to return red you would change the position to 2.","title":"Get Part of the text block"},{"location":"lessons/rgbled/#text-to-number-block","text":"This block will change text stored in the computer and convert it into a number. We need this because whenever an Arduino recieves a message it's text.","title":"Text to number block"},{"location":"lessons/rgbled/#steps","text":"1. Insert the rgb led into the breadboard. The red wire goes into (42, E). The ground wire goes into (39, E). The green wire goes into (37, E). The blue wire goes into (35, E). 2. Connect a jumper wire into - of the breadboard to gnd pin of the Arduino. 3. Connect a resistor into (42, D) and (42, B) of the breadboard. 4. Connect a jumper wire into (42, A) and the other end into pin 6 of the Arduino. 5. Connect a jumper wire into (39, A) and the other end into - of the breadboard. 6. Connect a resistor into (37, D) and (37, B) of the breadboard. 7. Connect a jumper wire into (37, A) and the other end into pin 5 of the Arduino. 8. Connect a resistor into (35, D) and (35, B) of the breadboard. 9. Connect a jumper wire into (35, A) and the other end into pin 3 of the Arduino.","title":"Steps"},{"location":"lessons/rgbled/#testing-wire","text":"","title":"Testing Wire"},{"location":"lessons/rgbled/#coding","text":"","title":"Coding"},{"location":"lessons/servos/","text":"Servos Objective To learn how to use a servo and buttons by building fun projects. Bill of Materials Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape What is a servo A servo is a motor that allows you to control the exact rotation. You do this by telling the Arduino how many degrees to rotate it. What is a push button or switch A button or switch is a component that allows you to control whether electricity flows through it. It allows you to turn on and off the electricity. Servo Block The servo block is used to control a servo. The pin number controls which pin is connectted to the Arduino. The degrees controls what position of the servo. Button Setup Block This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit. Create Block This is used to create your own blocks. You can put blocks inside the create block and they will run when you use the block you created. Loop Block A loop block will run the blocks inside it a certain number of times. What is a variable? A variable is how the computer stores information that can change. The information that it stores is called it's value. The way you get value that a variable stores is by using the get variable block and it's name. A variable also as a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color Wiring Steps 1. Connect one end of the jumper wire into GND of the Arduino and the other end into - of the breadboard. 2. Connect one end of the jumper wire into 5v of the Arduino and the other end into + of the breadboard. 3. Connect one end of the jumper wire into (25, A) and the other end into - of the breadboard. 4. Connect one of the wires connected to the button into (25, E). 5. Connect the other of the wire connected to the button into (27, E). 6. Connect one end of the jumper wire into (27, A) and the other end into pin 7 of the Arduino. 7. Connect one end of the jumper wire into (46, E) and the other end into data wire (orange) of the servo. 8. Connect one end of the jumper wire into (46, A) and the other end into pin 3 of the Arduino. 9. Connect one end of the jumper wire into + of the breadboard and the other end into power wire (red) of the servo. 10. Connect one end of the jumper wire into - of the breadboard and the other end into ground wire (brown) of the servo. 11. Draw you hand on a piece of posterboard. 12. Cut it out. 13. Tape it to the popsicle stick. 14. Tape the popsicle stick to the plastic piece. Try to create a 90 degree angle like the picture. 15. Tape both sides. 16. Tape down the servo. 17. Make sure the servo can rotate the hand up and down. Coding High Five Machine Steps For Wave 1. Undo the tape and make plastic piece lay flat with the popsicle stick. 2. Tape it up Coding The Wave How to create a wave block Challenge Using the wave block you created. Write code that will make a wave when the button is pressed. Review What is a variable? What is a servo? What is a push button? How do you create a custom block? What kinds of projects would you like to build with this?","title":"Servos"},{"location":"lessons/servos/#servos","text":"","title":"Servos"},{"location":"lessons/servos/#objective","text":"To learn how to use a servo and buttons by building fun projects.","title":"Objective"},{"location":"lessons/servos/#bill-of-materials","text":"Arduino Uno x 1 Servo x 1 Push Button x 1 Jump Wires x 10 breadboard x 1 Posterboard Popsicle Stick Tape","title":"Bill of Materials"},{"location":"lessons/servos/#what-is-a-servo","text":"A servo is a motor that allows you to control the exact rotation. You do this by telling the Arduino how many degrees to rotate it.","title":"What is a servo"},{"location":"lessons/servos/#what-is-a-push-button-or-switch","text":"A button or switch is a component that allows you to control whether electricity flows through it. It allows you to turn on and off the electricity.","title":"What is a push button or switch"},{"location":"lessons/servos/#servo-block","text":"The servo block is used to control a servo. The pin number controls which pin is connectted to the Arduino. The degrees controls what position of the servo.","title":"Servo Block"},{"location":"lessons/servos/#button-setup-block","text":"This block is used to tell which pin to use the for push button. Under the dashes you will be able to set when the button is pressed in the virtual circuit.","title":"Button Setup Block"},{"location":"lessons/servos/#create-block","text":"This is used to create your own blocks. You can put blocks inside the create block and they will run when you use the block you created.","title":"Create Block"},{"location":"lessons/servos/#loop-block","text":"A loop block will run the blocks inside it a certain number of times.","title":"Loop Block"},{"location":"lessons/servos/#what-is-a-variable","text":"A variable is how the computer stores information that can change. The information that it stores is called it's value. The way you get value that a variable stores is by using the get variable block and it's name. A variable also as a type of data that it stores. In Electroblocks there are 4 types: Text Numbers Boolean (true or false) Color","title":"What is a variable?"},{"location":"lessons/servos/#wiring-steps","text":"1. Connect one end of the jumper wire into GND of the Arduino and the other end into - of the breadboard. 2. Connect one end of the jumper wire into 5v of the Arduino and the other end into + of the breadboard. 3. Connect one end of the jumper wire into (25, A) and the other end into - of the breadboard. 4. Connect one of the wires connected to the button into (25, E). 5. Connect the other of the wire connected to the button into (27, E). 6. Connect one end of the jumper wire into (27, A) and the other end into pin 7 of the Arduino. 7. Connect one end of the jumper wire into (46, E) and the other end into data wire (orange) of the servo. 8. Connect one end of the jumper wire into (46, A) and the other end into pin 3 of the Arduino. 9. Connect one end of the jumper wire into + of the breadboard and the other end into power wire (red) of the servo. 10. Connect one end of the jumper wire into - of the breadboard and the other end into ground wire (brown) of the servo. 11. Draw you hand on a piece of posterboard. 12. Cut it out. 13. Tape it to the popsicle stick. 14. Tape the popsicle stick to the plastic piece. Try to create a 90 degree angle like the picture. 15. Tape both sides. 16. Tape down the servo. 17. Make sure the servo can rotate the hand up and down.","title":"Wiring Steps"},{"location":"lessons/servos/#coding-high-five-machine","text":"","title":"Coding High Five Machine"},{"location":"lessons/servos/#steps-for-wave","text":"1. Undo the tape and make plastic piece lay flat with the popsicle stick. 2. Tape it up","title":"Steps For Wave"},{"location":"lessons/servos/#coding-the-wave","text":"","title":"Coding The Wave"},{"location":"lessons/servos/#how-to-create-a-wave-block","text":"","title":"How to create a wave block"},{"location":"lessons/servos/#challenge","text":"Using the wave block you created. Write code that will make a wave when the button is pressed.","title":"Challenge"},{"location":"lessons/servos/#review","text":"What is a variable? What is a servo? What is a push button? How do you create a custom block? What kinds of projects would you like to build with this?","title":"Review"},{"location":"lessons/setting-up-chrome/","text":"Setting up chrome In order to get chrome working you will need to turn on some flags. At the time of the writing it's not possible to do this with firefox. Video Steps 1. Go to chrome://flags in your chrome browser 2. In the search bar type in 'Experimental Web Platform features' 3. Enable the feature and click the relaunch button at the bottom of your screen.","title":"Setting up Chrome"},{"location":"lessons/setting-up-chrome/#setting-up-chrome","text":"In order to get chrome working you will need to turn on some flags. At the time of the writing it's not possible to do this with firefox.","title":"Setting up chrome"},{"location":"lessons/setting-up-chrome/#video","text":"","title":"Video"},{"location":"lessons/setting-up-chrome/#steps","text":"1. Go to chrome://flags in your chrome browser 2. In the search bar type in 'Experimental Web Platform features' 3. Enable the feature and click the relaunch button at the bottom of your screen.","title":"Steps"},{"location":"lessons/what-is-an-arduino/","text":"What is an Arduino? Objective To learn what an Arduino is and some of the parts of an Arduino? Kit Bill of Materials 1 x Arduino with cable Video What is an Arduino? An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno. What are pins? Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens. Where is the Arduino's brain? What are the RX and TX leds and pins? These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up. Reset Button (reloads the program) This will restart the Arduino with the code that is already on it. Internal Led This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino","text":"","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#objective","text":"To learn what an Arduino is and some of the parts of an Arduino?","title":"Objective"},{"location":"lessons/what-is-an-arduino/#kit","text":"","title":"Kit"},{"location":"lessons/what-is-an-arduino/#bill-of-materials","text":"1 x Arduino with cable","title":"Bill of Materials"},{"location":"lessons/what-is-an-arduino/#video","text":"","title":"Video"},{"location":"lessons/what-is-an-arduino/#what-is-an-arduino_1","text":"An Arduino is a type of computer. The main advantage of Arduino is that they make it easy to build electronic projects. Arduino comes in many shapes and sizes. In the course, we'll mainly be using the Arduino Uno.","title":"What is an Arduino?"},{"location":"lessons/what-is-an-arduino/#what-are-pins","text":"Pins are the pieces of metal that stick out of the Arduino. They are covered with plastic. With code, you can make a pin an input pin or an output pin. Input pins sense whether electricity is running through the pin. Output pins turn on and off electricity. Input pins are often used for sensors, while output pins are often used to control electrical components like LEDs, motors, and LCD screens.","title":"What are pins?"},{"location":"lessons/what-is-an-arduino/#where-is-the-arduinos-brain","text":"","title":"Where is the Arduino's brain?"},{"location":"lessons/what-is-an-arduino/#what-are-the-rx-and-tx-leds-and-pins","text":"These pins are used to receive and transmit messages to and from the Arduino. Whenever a message is being sent from the Arduino, the TX LED lights up. Whenever a message is being received, the RX led lights up.","title":"What are the RX and TX leds and pins?"},{"location":"lessons/what-is-an-arduino/#reset-button-reloads-the-program","text":"This will restart the Arduino with the code that is already on it.","title":"Reset Button (reloads the program)"},{"location":"lessons/what-is-an-arduino/#internal-led","text":"This led is built into the Arduino. It will light up when pin 13 is turned on.","title":"Internal Led"}]}